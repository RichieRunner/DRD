@model Richie.DRD.ViewModels.EditPlayerViewModel

@{
    ViewBag.Title = "Edit Player";
}

@Html.Action("SidebarMenu")

<html>

<head>
    <title>Edit Player</title>
</head>

<body>
    <div id="wrapper" class="toggled container body-content">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="container body-content">
                <h2>Edit</h2>
                <div class="form-horizontal">
                    @*<h4>EditPlayerViewModel</h4>*@
                    @*<hr />*@
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(m => m.Player.FullName, "Name: ", new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <p class="form-control-static">
                                @Html.DisplayFor(m => m.Player.FullName)
                            </p>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Player.MLBTeamAbbreviation, "MLB Team: ", new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.Player.MLBTeamID, Model.MLBTeams.OrderBy(o => o.Text), new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Player.PositionName, "Position: ", new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.Player.PositionEID, Model.Positions, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Player.MLBID, "MLB ID: ", new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Player.MLBID, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Player.Draft, "Draft: ", new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <p class="form-control-static">
                                @Html.DisplayFor(m => m.Player.Draft)
                            </p>
                        </div>
                    </div>

                    

                    <div class="">
                        @Html.ActionLink("Back to List", "Index", Model.Player.TeamPID)


                        <div class="myform" button>
                            <input type="button" value="Make Toast" class="btn btn-danger" id="maketoastbutton" />
                        </div>

                        <div class="myform button">
                            <input type="submit" value="Save" class="btn btn-primary" id="maketoastbutton" />
                        </div>

                        <div class="myform button">
                            @Html.ActionLink("Promote Player", "Promote", new { id = Model.Player.PlayerPID }, new { onclick = "return confirm('Are you sure you want to promote " + @Model.Player.FullName + " to your Yahoo MLB roster?')", @class = "btn btn-success"})
                        </div>
                        

                    </div>
                </div>
            </div>

        }
    </div>

    <script>
        
        $(document).ready(function () {
            //$.toaster({ priority: 'success', title: 'title', message: 'yay' });

            //$('#maketoastbutton').click(makeToast);


        });


        //$('#maketoastbutton').click(makeToast);

        $('#maketoastbutton').click(function () {
            sessionStorage.reloadAfterPageLoad = true;
            window.location.reload();
        });
        
        $(function () {
            if (sessionStorage.reloadAfterPageLoad) {
                alert("herro");
                sessionStorage.reloadAfterPageLoad = false;
            }
        })

        function makeToast() {
            $.toaster({ priority: 'success', title: 'title', message: 'Toast Made!' });
        };


        
    </script>

</body>

</html>